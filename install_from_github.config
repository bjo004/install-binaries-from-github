# GitHub Binary Installer Configuration
# Format: [tool_name] followed by configuration variables
# Use %ARCH% placeholder for architecture substitution
# Use %VERSION% placeholder for version substitution

[k9s]
DESCRIPTION="Kubernetes CLI to manage your clusters in style"
APPLICATION="k9s"
GITHUB_REPO="derailed/k9s"
VERSION_CMD_ARGS="version -s"
VERSION_REGEX='v\d+\.\d+\.\d+'
ARCHIVE_PATTERN="k9s_Linux_%ARCH%.tar.gz"
BINARY_NAME="k9s"

[helm]
DESCRIPTION="Kubernetes package manager"
APPLICATION="helm"
GITHUB_REPO="helm/helm"
VERSION_CMD_ARGS="version --short"
VERSION_REGEX='v\d+\.\d+\.\d+'
ARCHIVE_PATTERN="helm-%VERSION%-linux-%ARCH%.tar.gz"
BINARY_NAME="linux-%ARCH%/helm"

[terragrunt]
DESCRIPTION="Terraform wrapper for DRY configurations"
APPLICATION="terragrunt"
GITHUB_REPO="gruntwork-io/terragrunt"
VERSION_CMD_ARGS="--version"
VERSION_REGEX='v\d+\.\d+\.\d+'
ARCHIVE_PATTERN="terragrunt_linux_%ARCH%"
BINARY_NAME="terragrunt_linux_%ARCH%"

[tenv]
DESCRIPTION="OpenTofu / Terraform / Terragrunt and Atmos version manager"
APPLICATION="tenv"
GITHUB_REPO="tofuutils/tenv"
VERSION_CMD_ARGS="version"
VERSION_REGEX='v\d+\.\d+\.\d+'
ARCHIVE_PATTERN="tenv_v%VERSION%_Linux_x86_64.tar.gz"
BINARY_NAME="tenv"

[docker-compose]
DESCRIPTION="Multi-container Docker application orchestrator"
APPLICATION="docker-compose"
GITHUB_REPO="docker/compose"
VERSION_CMD_ARGS="version --short"
VERSION_REGEX='\d+\.\d+\.\d+'
ARCHIVE_PATTERN="docker-compose-linux-x86_64"
BINARY_NAME="docker-compose-linux-x86_64"

[jq]
DESCRIPTION="Command-line JSON processor"
APPLICATION="jq"
GITHUB_REPO="jqlang/jq"
VERSION_CMD_ARGS="--version"
VERSION_REGEX='jq-\d+\.\d+(\.\d+)?'
ARCHIVE_PATTERN="jq-linux-amd64"
BINARY_NAME="jq-linux-amd64"

[yq]
DESCRIPTION="Command-line YAML processor"
APPLICATION="yq"
GITHUB_REPO="mikefarah/yq"
VERSION_CMD_ARGS="--version"
VERSION_REGEX='v\d+\.\d+\.\d+'
ARCHIVE_PATTERN="yq_linux_%ARCH%.tar.gz"
BINARY_NAME="yq_linux_%ARCH%"

[argocd]
DESCRIPTION="GitOps continuous delivery tool"
APPLICATION="argocd"
GITHUB_REPO="argoproj/argo-cd"
VERSION_CMD_ARGS="version --client --short"
VERSION_REGEX='\d+\.\d+\.\d+'
ARCHIVE_PATTERN="argocd-linux-amd64"
BINARY_NAME="argocd-linux-amd64"

[flux]
DESCRIPTION="GitOps toolkit for Kubernetes"
APPLICATION="flux"
GITHUB_REPO="fluxcd/flux2"
VERSION_CMD_ARGS="version --client"
VERSION_REGEX='v\d+\.\d+\.\d+'
ARCHIVE_PATTERN="flux_%VERSION%_linux_%ARCH%.tar.gz"
BINARY_NAME="flux"

[kind]
DESCRIPTION="Kubernetes in Docker - local clusters"
APPLICATION="kind"
GITHUB_REPO="kubernetes-sigs/kind"
VERSION_CMD_ARGS="version"
VERSION_REGEX='v\d+\.\d+\.\d+'
ARCHIVE_PATTERN="kind-linux-%ARCH%"
BINARY_NAME="kind-linux-%ARCH%"

[stern]
DESCRIPTION="Multi pod and container log tailing for Kubernetes"
APPLICATION="stern"
GITHUB_REPO="stern/stern"
VERSION_CMD_ARGS="--version"
VERSION_REGEX='\d+\.\d+\.\d+'
ARCHIVE_PATTERN="stern_%VERSION%_linux_amd64.tar.gz"
BINARY_NAME="stern"

[dive]
DESCRIPTION="Explore Docker image layers and optimize size"
APPLICATION="dive"
GITHUB_REPO="wagoodman/dive"
VERSION_CMD_ARGS="--version"
VERSION_REGEX='\d+\.\d+\.\d+'
ARCHIVE_PATTERN="dive_%VERSION%_linux_amd64.tar.gz"
BINARY_NAME="dive"

[trivy]
DESCRIPTION="Vulnerability scanner for containers and infrastructure"
APPLICATION="trivy"
GITHUB_REPO="aquasecurity/trivy"
VERSION_CMD_ARGS="version"
VERSION_REGEX='\d+\.\d+\.\d+'
ARCHIVE_PATTERN="trivy_%VERSION%_Linux-64bit.tar.gz"
BINARY_NAME="trivy"

[grype]
DESCRIPTION="Vulnerability scanner for container images and filesystems"
APPLICATION="grype"
GITHUB_REPO="anchore/grype"
VERSION_CMD_ARGS="version"
VERSION_REGEX='\d+\.\d+\.\d+'
ARCHIVE_PATTERN="grype_%VERSION%_linux_amd64.tar.gz"
BINARY_NAME="grype"

[bat]
DESCRIPTION="Enhanced cat with syntax highlighting"
APPLICATION="bat"
GITHUB_REPO="sharkdp/bat"
VERSION_CMD_ARGS="--version"
VERSION_REGEX='\d+\.\d+\.\d+'
ARCHIVE_PATTERN="bat-v%VERSION%-x86_64-unknown-linux-gnu.tar.gz"
BINARY_NAME="bat-v%VERSION%-x86_64-unknown-linux-gnu/bat"

[fd]
DESCRIPTION="Simple, fast and user-friendly alternative to find"
APPLICATION="fd"
GITHUB_REPO="sharkdp/fd"
VERSION_CMD_ARGS="--version"
VERSION_REGEX='v?(\d+\.\d+\.\d+)'
ARCHIVE_PATTERN="fd-v%VERSION%-x86_64-unknown-linux-gnu.tar.gz"
BINARY_NAME="fd-v%VERSION%-x86_64-unknown-linux-gnu/fd"

[ripgrep]
DESCRIPTION="Recursively search directories for regex patterns"
APPLICATION="rg"
GITHUB_REPO="BurntSushi/ripgrep"
VERSION_CMD_ARGS="--version"
VERSION_REGEX='\d+\.\d+\.\d+'
ARCHIVE_PATTERN="ripgrep-%VERSION%-x86_64-unknown-linux-musl.tar.gz"
BINARY_NAME="ripgrep-%VERSION%-x86_64-unknown-linux-musl/rg"
